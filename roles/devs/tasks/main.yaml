- name: git, curl, wget
  become: true
  apt:
    name:
      - git
      - curl
      - wget
      - unzip
    update_cache: yes

- name: Check cargo is installed
  shell: command -v cargo
  register: cargo_exists
  ignore_errors: yes
  changed_when: false

- name: Download rustup installer
  when: cargo_exists is failed
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/sh.rustup.rs
    mode: '0755'
    force: 'yes'
  tags:
    - rust

- name: Install rust/cargo
  when: cargo_exists is failed
  shell: /tmp/sh.rustup.rs -y
  tags:
    - rust

- name: create ~/bin directory
  file:
    path: "{{ ansible_env.HOME }}/bin"
    state: directory
    mode: '0755'

- name: add ~/bin to PATH
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "export PATH=$HOME/bin:$PATH"

- name: Download rtx bin file
  get_url:
    url: https://rtx.pub/rtx-latest-linux-x64
    dest: "{{ ansible_env.HOME }}/bin/rtx"
    mode: '0755'

- name: rtx bashrc
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "eval \"$(~/bin/rtx activate bash)\""

- name: Get ghq version
  changed_when: false
  command: ghq --version
  register: ghq_version_output

- name: check if the version matces
  changed_when: false
  set_fact:
    ghq_version_matches: "{{ ghq_version in ghq_version_output }}"

- name: "install ghq {{ ghq_version }}"
  command: "rtx install ghq@{{ ghq_version }}"
  when: not ghq_version_matches

- name: use global ghq 1.4.1
  command: rtx use -g ghq@1.4.1
  when: not ghq_version_matches
